{"version":3,"sources":["components/TodoForm.js","components/TodoItem.js","components/Footer.js","App.js","index.js"],"names":["TodoForm","state","text","handleChange","_ref","_ref$target","target","name","value","_this","setState","Object","defineProperty","handleSubmit","event","onSubmit","props","preventDefault","id","shortid","generate","complete","react_default","a","createElement","this","className","placeholder","onChange","Component","TodoItem","todo","onDelete","toggleComplete","type","onClick","checked","style","textDecoration","color","htmlFor","Footer","updateTodoToShow","todosToShow","todos","removeAllCompleteTodos","display","filter","length","href","some","App","toggleAllComplete","addTodo","prevState","concat","toConsumableArray","map","_objectSpread","string","handleDeleteTodo","_this2","TodoForm_TodoForm","components_TodoItem","key","components_Footer","React","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1a6b39ea.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\n\nexport default class TodoForm extends Component {\n  state = {\n    text: '',\n  }\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit = (event) => {\n    const { onSubmit } = this.props;\n\n    event.preventDefault();\n\n    onSubmit({\n      id: shortid.generate(),\n      text: this.state.text,\n      complete: false,\n    });\n\n    this.setState({\n      text: '',\n    });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          name=\"text\"\n          value={this.state.text}\n          onChange={this.handleChange}\n        />\n      </form>\n    );\n  }\n}\n\nTodoForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({\n  todo, id, onDelete, toggleComplete,\n}) => (\n  <li className=\"\">\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        id={id}\n        onClick={toggleComplete}\n        checked={todo.complete ? 'checked' : ''}\n      />\n      <label\n        style={todo.complete\n          ? { textDecoration: 'line-through', color: '#D9D9D9' }\n          : {}}\n        htmlFor={id}\n      >\n        {todo.text}\n      </label>\n      <button\n        type=\"button\"\n        className=\"destroy\"\n        onClick={onDelete}\n      />\n    </div>\n  </li>\n);\n\nTodoItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  toggleComplete: PropTypes.func.isRequired,\n  todo: PropTypes.shape({\n    text: PropTypes.string.isRequired,\n    complete: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Footer = ({\n  updateTodoToShow, todosToShow, todos, removeAllCompleteTodos,\n}) => (\n  <footer className=\"footer\" style={{ display: 'block' }}>\n    <span className=\"todo-count\">\n      {todos.filter(todo => !todo.complete).length}\n      {' '}\n        items left\n    </span>\n\n    <ul className=\"filters\">\n      <li>\n        <a\n          onClick={() => updateTodoToShow('all')}\n          href=\"#/\"\n          className={todosToShow === 'all' ? 'selected' : ''}\n        >\n            All\n        </a>\n      </li>\n\n      <li>\n        <a\n          onClick={() => updateTodoToShow('active')}\n          href=\"#/active\"\n          className={todosToShow === 'active' ? 'selected' : ''}\n        >\n            Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          onClick={() => updateTodoToShow('completed')}\n          href=\"#/completed\"\n          className={todosToShow === 'completed' ? 'selected' : ''}\n        >\n            Completed\n        </a>\n      </li>\n    </ul>\n\n    {todos.some(todo => todo.complete)\n        && (\n          <button\n            onClick={removeAllCompleteTodos}\n            type=\"button\"\n            className=\"clear-completed\"\n            style={{ display: 'block' }}\n          >\n            {' '}\n            Clear completed\n          </button>\n        )\n    }\n  </footer>\n);\n\nFooter.propTypes = {\n  removeAllCompleteTodos: PropTypes.func.isRequired,\n  updateTodoToShow: PropTypes.func.isRequired,\n  todosToShow: PropTypes.string.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\nimport TodoForm from './components/TodoForm';\nimport TodoItem from './components/TodoItem';\nimport Footer from './components/Footer';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    todosToShow: 'all',\n    toggleAllComplete: true,\n  }\n\n  addTodo = (todo) => {\n    this.setState(prevState => ({\n      todos: [todo, ...prevState.todos],\n    }));\n  }\n\n  toggleComplete = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            complete: !todo.complete,\n          };\n        }\n\n        return todo;\n      }),\n    }));\n  }\n\n  updateTodoToShow = (string) => {\n    this.setState({\n      todosToShow: string,\n    });\n  }\n\n  handleDeleteTodo = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== id),\n    }));\n  }\n\n  removeAllCompleteTodos = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.complete),\n    }));\n  }\n\n  toggleAllComplete = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => ({\n        ...todo,\n        complete: prevState.toggleAllComplete,\n      })),\n      toggleAllComplete: !prevState.toggleAllComplete,\n    }));\n  }\n\n  render() {\n    const { todosToShow } = this.state;\n\n    let todos = [];\n\n    if (todosToShow === 'all') {\n      todos = this.state.todos;\n    } else if (todosToShow === 'active') {\n      todos = this.state.todos.filter(todo => !todo.complete);\n    } else if (todosToShow === 'completed') {\n      todos = this.state.todos.filter(todo => todo.complete);\n    }\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <TodoForm onSubmit={this.addTodo} />\n        </header>\n\n        <section className=\"main\" style={{ display: 'block' }}>\n          <input\n            onClick={this.toggleAllComplete}\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <ul className=\"todo-list\">\n            {todos.map(todo => (\n              <TodoItem\n                key={todo.id}\n                todo={todo}\n                id={todo.id}\n                toggleComplete={() => this.toggleComplete(todo.id)}\n                onDelete={() => this.handleDeleteTodo(todo.id)}\n              />\n            ))}\n          </ul>\n        </section>\n\n        <Footer\n          todos={todos}\n          todosToShow={todosToShow}\n          updateTodoToShow={this.updateTodoToShow}\n          removeAllCompleteTodos={this.removeAllCompleteTodos}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}